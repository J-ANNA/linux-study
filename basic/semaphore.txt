Linux设备驱动之semaphore机制

参考链接： https://blog.csdn.net/xiao229404041/article/details/7031776

在Linux系统中，信号量是一种重要的加锁机制，特别在互斥型资源中，semaphore更能很好的工作。

1: semaphore结构体定义
在Linux2.6.35内核中，semaphore的实现机制与以前的版本一点不同，在其中去除了DECLARE_MUTEX_LOCKED这个初始化互斥宏定义，但是，又添加了一个特别重要的函数，down_killable，这个函数的添加，使此版本的semaphore机制比以往的更强。semaphore结构全定义如下所示。

struct semaphore { spinlock_t lock; /* 自旋锁结构体变量 */ unsigned int count; /* 用于计录资料数量 */ struct list_head wait_list; /* 内部链表结构体变量 */ };

从此结构体中可以看从，semaphore机制也就是自旋锁的包装。





























